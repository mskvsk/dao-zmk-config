/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF  0
#define SYM  1
#define NAV  2
#define MOU  3

#undef U_MOUSE_MOVE_MAX
#undef U_MOUSE_SCROLL_MAX

#define U_MOUSE_MOVE_MAX 800
#define U_MOUSE_SCROLL_MAX 35

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_Y(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_Y(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_X(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_X(U_MOUSE_MOVE_MAX)

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCRL_Y(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCRL_Y(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCRL_X(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCRL_X(U_MOUSE_SCROLL_MAX)

#define ZMK_HELPER_STRINGIFY(x) #x

#define ZMK_BEHAVIOR_CORE_caps_word   compatible = "zmk,behavior-caps-word";  #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_hold_tap    compatible = "zmk,behavior-hold-tap";   #binding-cells = <2>
#define ZMK_BEHAVIOR_CORE_key_repeat  compatible = "zmk,behavior-key-repeat"; #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_macro       compatible = "zmk,behavior-macro";      #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_mod_morph   compatible = "zmk,behavior-mod-morph";  #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_sticky_key  compatible = "zmk,behavior-sticky-key"; #binding-cells = <1>
#define ZMK_BEHAVIOR_CORE_tap_dance   compatible = "zmk,behavior-tap-dance";  #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_tri_state   compatible = "zmk,behavior-tri-state";  #binding-cells = <0>

#define ZMK_BEHAVIOR(name, type, ...) \
    / { \
        behaviors { \
            name: name { \
                label = ZMK_HELPER_STRINGIFY(ZB_ ## name); \
                ZMK_BEHAVIOR_CORE_ ## type; \
                __VA_ARGS__ \
            }; \
        }; \
    };

#define QUICK_TAP_MS 175
#define TAP_TERM_MS 300
 
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29  // left hand
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35  // right hand
#define KEYS_MOD_L 14 15 16
#define KEYS_MOD_R 19 20 21 


#define LHT(name) \
    / { \
        behaviors { \
            name: name { \
                compatible = "zmk,behavior-hold-tap"; \
				#binding-cells = <2>; \
                label = ZMK_HELPER_STRINGIFY(LHT_ ## name); \
                flavor = "balanced"; \
	            tapping-term-ms = <TAP_TERM_MS>; \
                quick-tap-ms = <QUICK_TAP_MS>; \
                hold-trigger-key-positions = <KEYS_R>; \
                bindings = <&kp>, <&kp>; \
            }; \
        }; \
    };

#define RHT(name) \
    / { \
        behaviors { \
            name: name { \
                compatible = "zmk,behavior-hold-tap"; \
				#binding-cells = <2>; \
                label = ZMK_HELPER_STRINGIFY(LHT_ ## name); \
                flavor = "balanced"; \
	            tapping-term-ms = <TAP_TERM_MS>; \
                quick-tap-ms = <QUICK_TAP_MS>; \
                hold-trigger-key-positions = <KEYS_L>; \
                bindings = <&kp>, <&kp>; \
            }; \
        }; \
    };

#define MM_SHIFT_LALT_RCTRL_LHT(name, none, s, la, ra) \
    / { \
        behaviors { \
            name ## _S: name ## _S{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARALHT_ ## name ## _S); \
                #binding-cells = <0>; \
                bindings = <none>, <s>; \
                mods = <(MOD_LSFT)>; \
            }; \
            name ## _LA: name ## _LA{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARALHT_ ## name ## _LA); \
                #binding-cells = <0>; \
                bindings = <&name ## _S>, <la>; \
                mods = <(MOD_LALT)>; \
            }; \
            name ## _RA: name ## _RA{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARALHT_ ## name ## _RA); \
                #binding-cells = <0>; \
                bindings = <&name ## _LA>, <ra>; \
                mods = <(MOD_RCTL)>; \
            }; \
            name: name { \
                compatible = "zmk,behavior-hold-tap"; \
				#binding-cells = <2>; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARALHT_ ## name); \
                flavor = "balanced"; \
	            tapping-term-ms = <TAP_TERM_MS>; \
                quick-tap-ms = <QUICK_TAP_MS>; \
                hold-trigger-key-positions = <KEYS_R>; \
                bindings = <&kp>, <&name ## _RA>; \
            }; \
        }; \
    };

#define MM_SHIFT_RCTRL_LHT(name, none, s, ra) \
    / { \
        behaviors { \
            name ## _S: name ## _S{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SRALHT_ ## name ## _S); \
                #binding-cells = <0>; \
                bindings = <none>, <s>; \
                mods = <(MOD_LSFT)>; \
            }; \
            name ## _RA: name ## _RA{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SRALHT_ ## name ## _RA); \
                #binding-cells = <0>; \
                bindings = <&name ## _S>, <ra>; \
                mods = <(MOD_RCTL)>; \
            }; \
            name: name { \
                compatible = "zmk,behavior-hold-tap"; \
				#binding-cells = <2>; \
                label = ZMK_HELPER_STRINGIFY(MM_SRALHT_ ## name); \
                flavor = "balanced"; \
	            tapping-term-ms = <TAP_TERM_MS>; \
                quick-tap-ms = <QUICK_TAP_MS>; \
                hold-trigger-key-positions = <KEYS_R>; \
                bindings = <&kp>, <&name ## _RA>; \
            }; \
        }; \
    };


#define MM_SHIFT_LALT_RCTRL_RHT(name, none, s, la, ra) \
    / { \
        behaviors { \
            name ## _S: name ## _S{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARAHT_ ## name ## _S); \
                #binding-cells = <0>; \
                bindings = <none>, <s>; \
                mods = <(MOD_LSFT)>; \
            }; \
            name ## _LA: name ## _LA{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARAHT_ ## name ## _LA); \
                #binding-cells = <0>; \
                bindings = <&name ## _S>, <la>; \
                mods = <(MOD_LALT)>; \
            }; \
            name ## _RA: name ## _RA{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARAHT_ ## name ## _RA); \
                #binding-cells = <0>; \
                bindings = <&name ## _LA>, <ra>; \
                mods = <(MOD_RCTL)>; \
            }; \
            name: name { \
                compatible = "zmk,behavior-hold-tap"; \
				#binding-cells = <2>; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARAHT_ ## name); \
                flavor = "balanced"; \
	            tapping-term-ms = <TAP_TERM_MS>; \
                quick-tap-ms = <QUICK_TAP_MS>; \
                hold-trigger-key-positions = <KEYS_L>; \
                bindings = <&kp>, <&name ## _RA>; \
            }; \
        }; \
    };

#define MM_SHIFT_LALT_RHT(name, none, s, la) \
    / { \
        behaviors { \
            name ## _S: name ## _S{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLAHT_ ## name ## _S); \
                #binding-cells = <0>; \
                bindings = <none>, <s>; \
                mods = <(MOD_LSFT)>; \
            }; \
            name ## _LA: name ## _LA{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLAHT_ ## name ## _LA); \
                #binding-cells = <0>; \
                bindings = <&name ## _S>, <la>; \
                mods = <(MOD_LALT)>; \
            }; \
            name: name { \
                compatible = "zmk,behavior-hold-tap"; \
				#binding-cells = <2>; \
                label = ZMK_HELPER_STRINGIFY(MM_SLAHT_ ## name); \
                flavor = "balanced"; \
	            tapping-term-ms = <TAP_TERM_MS>; \
                quick-tap-ms = <QUICK_TAP_MS>; \
                hold-trigger-key-positions = <KEYS_L>; \
                bindings = <&kp>, <&name ## _LA>; \
            }; \
        }; \
    };


#define MM_SHIFT_LALT_RCTRL(name, none, s, la, ra) \
    / { \
        behaviors { \
            name ## _S: name ## _S{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARA_ ## name ## _S); \
                #binding-cells = <0>; \
                bindings = <none>, <s>; \
                mods = <(MOD_LSFT)>; \
            }; \
            name ## _LA: name ## _LA{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARA_ ## name ## _LA); \
                #binding-cells = <0>; \
                bindings = <&name ## _S>, <la>; \
                mods = <(MOD_LALT)>; \
            }; \
            name: name{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLARA_ ## name); \
                #binding-cells = <0>; \
                bindings = <&name ## _LA>, <ra>; \
                mods = <(MOD_RCTL)>; \
            }; \
        }; \
    };

#define MM_SHIFT_LALT(name, none, s, la) \
    / { \
        behaviors { \
            name ## _S: name ## _S{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLA_ ## name ## _S); \
                #binding-cells = <0>; \
                bindings = <none>, <s>; \
                mods = <(MOD_LSFT)>; \
            }; \
            name: name{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SLA_ ## name); \
                #binding-cells = <0>; \
                bindings = <&name ## _S>, <la>; \
                mods = <(MOD_LALT)>; \
            }; \
        }; \
    };

#define MM_SHIFT_RCTRL(name, none, s, ra) \
    / { \
        behaviors { \
            name ## _S: name ## _S{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SRA_ ## name ## _S); \
                #binding-cells = <0>; \
                bindings = <none>, <s>; \
                mods = <(MOD_LSFT)>; \
            }; \
            name: name{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SRA_ ## name); \
                #binding-cells = <0>; \
                bindings = <&name ## _S>, <ra>; \
                mods = <(MOD_RCTL)>; \
            }; \
        }; \
    };

#define MM_SHIFT(name, none, s) \
    / { \
        behaviors { \
            name: name{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_S_ ## name); \
                #binding-cells = <0>; \
                bindings = <none>, <s>; \
                mods = <(MOD_LSFT)>; \
            }; \
        }; \
    };


#define MM_SHIFT_RHT(name, none, s) \
    / { \
        behaviors { \
            name ## _S: name ## _S{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_SHT_ ## name ## _S); \
                #binding-cells = <0>; \
                bindings = <none>, <s>; \
                mods = <(MOD_LSFT)>; \
            }; \
            name: name { \
                compatible = "zmk,behavior-hold-tap"; \
				#binding-cells = <2>; \
                label = ZMK_HELPER_STRINGIFY(MM_SHT_ ## name); \
                flavor = "balanced"; \
	            tapping-term-ms = <TAP_TERM_MS>; \
                quick-tap-ms = <QUICK_TAP_MS>; \
                hold-trigger-key-positions = <KEYS_L>; \
                bindings = <&kp>, <&name ## _S>; \
            }; \
        }; \
    };


#define MM_LALT(name, none, la) \
    / { \
        behaviors { \
            name: name{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_LA_ ## name); \
                #binding-cells = <0>; \
                bindings = <none>, <la>; \
                mods = <(MOD_LALT)>; \
            }; \
        }; \
    };

#define MM_RCTRL(name, none, rc) \
    / { \
        behaviors { \
            name: name{ \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(MM_RC_ ## name); \
                #binding-cells = <0>; \
                bindings = <none>, <rc>; \
                mods = <(MOD_RCTL)>; \
            }; \
        }; \
    };


/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        // zmk,matrix_transform = &five_column_transform;
     };


};

&mmv {
    time-to-max-speed-ms = <80>;
    acceleration-exponent = <1>;
};

&msc {
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <1>;
};

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };


LHT(lht)
RHT(rht)

/* main */
MM_SHIFT_RCTRL_LHT(p, &kp P, &kp LS(P), &kp G)
MM_SHIFT_RCTRL_LHT(t, &kp T, &kp LS(T), &kp D)
MM_SHIFT_RCTRL_LHT(v, &kp V, &kp LS(V), &kp B)

MM_SHIFT_LALT_RCTRL(l, &kp L, &kp LS(L), &kp N1, &kp J)
MM_SHIFT_LALT_RCTRL_RHT(n, &kp N, &kp LS(N), &kp N5, &kp H)
MM_SHIFT_LALT_RCTRL_RHT(m, &kp M, &kp LS(M), &kp N9, &kp K)

MM_SHIFT_LALT(u, &kp U, &kp LS(U), &kp N2)
MM_SHIFT_LALT(e, &kp E, &kp LS(E), &kp N6)
MM_SHIFT_LALT(comma, &kp COMMA, &kp QMARK, &kp N0)

MM_SHIFT_LALT_RHT(y, &kp Y, &kp LS(Y), &kp N3)
MM_SHIFT_LALT_RHT(o, &kp O, &kp LS(O), &kp N7)
MM_SHIFT_LALT(dot, &kp DOT, &kp EXCL, &kp UNDER)

MM_SHIFT_LALT(z, &kp Z, &kp LS(Z), &kp N4)
MM_SHIFT_LALT_RHT(i, &kp I, &kp LS(I), &kp N8)

/* symbol */

MM_SHIFT_LALT(lpar, &kp LPAR, &kp LBRC, &kp AT)
MM_SHIFT_LALT(space, &kp SPACE, &kp COLON, &kp SEMI)
MM_SHIFT_LALT(lss, &kp LT, &kp LBKT, &kp HASH)

MM_SHIFT_LALT(rpar, &kp RPAR, &kp RBRC, &kp DLLR)
MM_SHIFT_LALT(bspc, &kp BSPC, &kp EQUAL, &kp AMPS)
MM_SHIFT_LALT(grt, &kp GT, &kp RBKT, &kp TILDE)

MM_SHIFT_LALT(fslh, &kp FSLH, &kp PLUS, &kp BSLH)
MM_SHIFT_LALT(esc, &kp ESC, &kp MINUS, &kp PIPE)
MM_SHIFT_LALT(qt, &kp DQT, &kp APOS, &kp GRAVE)

MM_SHIFT_LALT(star, &kp STAR, &kp PRCNT, &kp CARET)

/* navigation */
MM_RCTRL(mbtn, &mkp LCLK, &mkp RCLK)

MM_LALT(left, &kp LEFT, &kp HOME)

MM_LALT(up, &kp UP, &kp PG_UP)
MM_LALT(down, &kp DOWN, &kp PG_DN)

MM_LALT(right, &kp RIGHT, &kp END)

MM_LALT(volup, &kp C_VOL_UP, &kp C_BRI_UP)
MM_LALT(voldn, &kp C_VOL_DN, &kp C_BRI_DN)

/* mouse */

MM_SHIFT(mtl, &none, &kp F16)
MM_SHIFT_LALT(mleft, &mmv MOVE_LEFT, &kp F19, &msc SCROLL_LEFT)
MM_SHIFT_RHT(mbl, &none, &kp F22)

MM_SHIFT_LALT(mup, &mmv MOVE_UP, &kp F17, &msc SCROLL_UP)
MM_SHIFT_LALT(mdown, &mmv MOVE_DOWN, &kp F20, &msc SCROLL_DOWN)
MM_SHIFT(mbc, &none, &kp F23)

MM_SHIFT(mtr, &none, &kp F18)
MM_SHIFT_LALT(mright, &mmv MOVE_RIGHT, &kp F21, &msc SCROLL_RIGHT)
MM_SHIFT(mbr, &none, &kp F24)


/ {
        keymap {
                compatible = "zmk,keymap";
                default_layer {
			label = "main";
                        bindings = <
&none &none  &none         &lht LMETA W  &lt NAV F  &p LALT P   &none  &none  &l          &u      &y LMETA Y  &none       &none &none
&none  &kp Q         &lht LCTRL R  &lt SYM S  &t LSHFT T  &none  &none  &n LSHFT N  &e      &o LCTRL O  &z          &none
&none  &kp A         &kp X         &lt MOU C  &v RCTRL V  &none  &none  &m RCTRL M  &comma  &dot        &kp I       &none
&none &none &none &none &none &none
                        >;
                };

		symbol_layer {
			label = "symbol";
                        bindings = <
&none &trans   &trans   &trans   &trans   &trans   &trans   &none    &lpar   &rpar  &fslh  &none   &trans   &none 
&trans   &trans   &trans   &trans   &trans   &trans   &none    &space  &bspc  &esc   &star   &trans   
&trans   &trans   &trans   &trans   &trans   &trans   &none    &lss    &grt   &qt    &kp RET &trans   
&none &none &none &none &none &none
                        >;
                };

		navigation_layer {
			label = "navigation";
                        bindings = <
&none &trans   &trans   &trans   &trans   &trans   &trans   &trans   &kp RET &up     &kp DEL  &trans  &trans   &none 
&trans   &trans   &trans   &trans   &trans   &trans   &trans   &left   &down   &right   &volup  &trans   
&trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans  &trans  &trans   &voldn  &trans   
&none &none &none &none &none &none
                        >;
                };

                mouse_layer {
			label = "mouse";
                        bindings = <
&none &trans   &trans   &trans      &trans  &trans     &trans     &trans   &mtl          &mup    &mtr     &trans   &trans  &none  
&trans   &trans   &trans      &trans  &trans     &trans     &trans   &mleft        &mdown  &mright  &trans   &trans   
&trans   &trans   &mt LALT X  &trans  &mbtn      &trans     &trans   &mbl RCTRL M  &mbc    &mbr     &trans   &trans   
&none &none &none &none &none &none
                        > ;
                };
        };
};
